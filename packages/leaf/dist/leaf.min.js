const e=[],t=new WeakMap,o=(e,t)=>{for(const r in e)"object"==typeof e[r]&&(e[r]=o(e[r],t));const r=new Proxy(e,{get(e,o,r){const n=Reflect.get(e,o,r);return t.onGet(e,o,r),n},set(e,r,n,s){"object"==typeof n&&(n=o(n,t));const c=Reflect.set(e,r,n,s);return t.onSet(e,r,n,s),c},deleteProperty(e,o){const r=Reflect.deleteProperty(e,o);return t.onDeleteProperty(e,o),r}});return Array.isArray(e)&&Object.setPrototypeOf(r,Array.prototype),r},r=t=>{e.push(t),t(),e.pop()},n=r=>o(r,{onGet(o,r){((o,r)=>{if(!e.length)return;let n=t.get(o);n||(n=new Map,t.set(o,n));let s=n.get(r);void 0===s&&(s=new Set,n.set(r,s)),e.forEach((e=>null==s?void 0:s.add(e)))})(o,r)},onSet(e,o){((e,o)=>{const r=t.get(e);if(!r)return;const n=r.get(o);n&&n.forEach((e=>{e()}))})(e,o)},onDeleteProperty(){}});var s,c;const a=e=>HTMLCollection.prototype.isPrototypeOf(e)||NodeList.prototype.isPrototypeOf(e)||Array.isArray(e),i=(e,t,o)=>{const r=document.createElement(e);for(const e in t)r.setAttribute(e,t[e]);if(o)if(a(o))for(const e of o)r.append(e);else r.append(o);return r},p=(e,t,o)=>void 0===t?i(e):(e=>void 0!==e.nodeType||"string"==typeof e||"number"==typeof e)(t)||a(t)?i(e,{},t):i(e,t,o),l=(e,t)=>{if(a(e))for(const o of e)t(o);else t(e)};class d extends HTMLElement{constructor(){super(),s.add(this)}connectedCallback(){var e;const t=this.attachShadow({mode:"open"});let o=null;const n=p("style"),a=null!==(e=this.css)&&void 0!==e?e:function(e,t,o,r){if("a"===o&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===o?r:"a"===o?r.call(e):r?r.value:t.get(e)}(this,s,"m",c);n.textContent=a(),t.appendChild(n),r((()=>{o&&l(o,(e=>t.removeChild(e))),o=this.render(),l(o,(e=>t.appendChild(e)))}))}render(){return this}css(){return""}}s=new WeakSet,c=function(){return""};const f=(e,t)=>{customElements.define(e,t)};export{d as LeafComponent,p as createElement,n as reactive,f as registerComponent,l as runCallbackOnElements,r as watchEffect};
//# sourceMappingURL=leaf.min.js.map
