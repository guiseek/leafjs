#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/core"),r=require("fs"),t=require("path"),l=require("glob"),n=require("rollup"),o=require("@rollup/plugin-node-resolve"),i=require("@rollup/plugin-commonjs"),a=require("rollup-plugin-terser"),s=require("commander");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=u(e),d=u(r),f=u(t),p=u(l),m=u(o),b=u(i);const g={presets:[["@babel/preset-env",{modules:!1}]],plugins:["@babel/plugin-transform-react-jsx"]},j=new s.Command,y=e=>{var r;return(null===(r=c.default.transformSync((e=>`\n    /** @jsx ___createElement_leaf */\n    import { createElementReactStyle as ___createElement_leaf } from '@leaf-web/core';\n    \n    // user code start\n    ${e};\n    // user code end\n  `)(e),g))||void 0===r?void 0:r.code)||""},x=e=>[".jsx",".tsx"].includes(f.default.extname(e))?e.substring(0,e.length-1):e,v=(e,r)=>{const t=d.default.readFileSync(f.default.resolve(e)).toString(),l=y(t);let n=x(f.default.resolve(r));return d.default.writeFileSync(n,"// NOTE: This file is generated by Leafjs parser. DO NOT EDIT!\n\n"+l),l},_=(e,r)=>{p.default(e,((e,t)=>{e?console.error(e):t.forEach((e=>{const t=f.default.join(r,e),l=f.default.dirname(t);d.default.mkdir(l,{recursive:!0},(r=>{r?console.error(r):v(e,t)}))}))}))},q=async e=>{const r={input:e,plugins:[m.default(),b.default(),a.terser()]},t={format:"iife",file:"./build/bundle.min.js"};let l=null;try{l=await n.rollup(r),await l.write(t)}catch(e){console.error(e)}l&&await l.close()},w=async e=>{const r=JSON.parse(d.default.readFileSync(e).toString());_(r.toBundle,r.outputDir),await q(x(f.default.join(r.outputDir,r.entry)))};j.name("leaf").description("Leafjs helper CLI."),j.command("build").description("Build and bundle a Leafjs application.").option("-c, --config <string>","Config file location.","./leaf.config.js").action((async e=>{await w(e.config)})),j.parse(),exports.buildFromConfig=w,exports.bundleFiles=q,exports.compileCode=y,exports.compileFile=v,exports.compileFilesWithGlob=_,exports.transformFilename=x;
//# sourceMappingURL=parser.min.js.map
