#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/core"),t=require("fs"),r=require("path"),l=require("glob"),n=require("rollup"),o=require("@rollup/plugin-node-resolve"),a=require("@rollup/plugin-commonjs"),i=require("rollup-plugin-terser"),s=require("commander"),d=require("@rollup/plugin-babel"),u=require("@rollup/plugin-inject"),c=require("chalk"),f=require("rollup-plugin-progress"),p=require("express"),g=require("express-ws"),m=require("chokidar"),y=require("open"),b=require("rollup-plugin-minify-html-literals"),x=require("rollup-plugin-postcss");function S(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var j=S(e),v=S(t),h=S(r),_=S(l),w=S(o),E=S(a),$=S(u),q=S(c),R=S(f),F=S(p),D=S(g),T=S(m),O=S(y),N=S(b),L=S(x);const C=(e,t,r=[new RegExp("</body>","i"),new RegExp("</svg>"),new RegExp("</head>","i")])=>{let l=null;for(const t of r){const r=t.exec(e);if(r){l=r[0];break}}return l?e.replace(new RegExp(l,"i"),`${t}\n${l}`):e},k=e=>{e=h.default.resolve(e);const r=F.default(),l=D.default(r),n=t.readFileSync(h.default.join(__dirname,"injected.min.js")).toString(),o=l=>{const a=t.readdirSync(l);for(const i of a){const a=h.default.join(l,i);if(t.statSync(a).isDirectory())o(a);else{if(".html"!==h.default.extname(a))continue;const l=t.readFileSync(a).toString(),o=h.default.parse(h.default.relative(e,a));r.get(h.default.join("/",o.dir,"index"===o.name?"":o.name),((e,t)=>{t.send(C(l,`\n          \x3c!-- code injected by leafjs --\x3e\n          <script>\n              ${n}\n          <\/script>`))}))}}};r.use("/",F.default.static(e,{index:!1})),o(e);let a=null;return l.app.ws("/socket",(e=>{a=e})),{start:r.listen,update:()=>{null==a||a.send(JSON.stringify({msg:"reload"}))},error:e=>{null==a||a.send(JSON.stringify({msg:"error",data:e}))},on:l.app.on}},H={presets:[["@babel/preset-env",{modules:!1,targets:"> 0.25%, not dead"}]],plugins:[["@babel/plugin-transform-react-jsx",{pragma:"___leaf_create_element_react"}]],babelHelpers:"bundled"},M=new s.Command,I=e=>{console.log(`${q.default.cyan("[leafjs]")} - ${q.default.blue("info")} - ${e}`)},J=e=>{console.log(`${q.default.cyan("[leafjs]")} - ${q.default.red("error")} - ${e}`)},P=e=>{var t;return(null===(t=j.default.transformSync((e=>`\n    /** @jsx ___createElement_leaf */\n    import { createElementReactStyle as ___createElement_leaf } from '@leaf-web/core';\n    \n    // user code start\n    ${e};\n    // user code end\n  `)(e),H))||void 0===t?void 0:t.code)||""},B=e=>[".jsx",".tsx"].includes(h.default.extname(e))?e.substring(0,e.length-1):e,U=(e,t)=>{const r=v.default.readFileSync(h.default.resolve(e)).toString(),l=P(r);let n=B(h.default.resolve(t));return v.default.writeFileSync(n,"// NOTE: This file is generated by Leafjs parser. DO NOT EDIT!\n\n"+l),l},V=async(e,t)=>{const r={input:e,plugins:[N.default(),L.default(),w.default(),E.default(),d.babel(H),$.default({___leaf_create_element_react:["@leaf-web/core","createElementReactStyle"]}),i.terser({compress:{passes:5}}),R.default()],treeshake:!0},l="js/bundle.min.js",o={format:"iife",file:h.default.join(t,l)};let a=null,s=!1;try{a=await n.rollup(r),await a.write(o)}catch(e){s=!0,J(`failed to compile.\n${q.default.gray(e)}`)}return a&&await a.close(),s&&process.exit(1),l},W=e=>{var t,r,l;return{entry:null!==(t=e.entry)&&void 0!==t?t:"./src/index.jsx",outputDir:null!==(r=e.outputDir)&&void 0!==r?r:"./dist",entryHTML:null!==(l=e.entryHTML)&&void 0!==l?l:"index.html"}},A=async e=>{const t=W(JSON.parse(v.default.readFileSync(e).toString())),r=v.default.readFileSync(t.entryHTML).toString(),l=await V(t.entry,t.outputDir);v.default.writeFileSync(h.default.join(t.outputDir,"index.html"),C(r,`<script src='${l}'><\/script>`,[new RegExp("</head>","i"),new RegExp("</body>","i")]))},G=(e,t)=>{v.default.existsSync("./.leaf")||v.default.mkdirSync("./.leaf");const r=W(JSON.parse(v.default.readFileSync(e).toString())),l="js/bundle.js",o=v.default.readFileSync(r.entryHTML).toString();v.default.writeFileSync(h.default.join("./.leaf","index.html"),C(o,"<script src='js/bundle.js'><\/script>",[new RegExp("</head>","i"),new RegExp("</body>","i")]));const a={input:r.entry,plugins:[L.default(),w.default(),E.default(),d.babel(H),$.default({___leaf_create_element_react:["@leaf-web/core","createElementReactStyle"]}),R.default()]},i={format:"iife",file:h.default.join("./.leaf",l)},s=n.watch({...a,output:i});let u=null;const c=k("./.leaf");c.start(t,(async()=>{I(`started development server on http://localhost:${t}.`),await O.default(`http://127.0.0.1:${t}/`)})),c.on("error",(e=>{J(`Failed to start development server.\n${q.default.gray(e)}`)}));const f=()=>{process.stdout.moveCursor(0,-1e4),process.stdout.cursorTo(0),process.stdout.clearScreenDown()};let p=!0;s.on("event",(e=>{"START"===e.code?(p=!0,f(),I("building..."),u=null):"END"===e.code?(u?(J("an unexpected error occured while building."),c.error(u.message)):(f(),I("build successful.")),p=!1):"ERROR"===e.code?(J(`failed to build.\n${q.default.gray(e.error)}`),u=e.error):"BUNDLE_END"===e.code&&e.result.close()}));T.default.watch(".",{ignored:["node_modules","**/*.jsx","**/*.tsx"]}).on("all",(()=>{p||u||(I("change detected to filesystem. reloading..."),c.update(),f(),I("waiting for changes..."))}))};M.name("leaf").description("Leafjs helper CLI."),M.command("build").description("Build and bundle a Leafjs application.").option("-c, --config <string>","Config file location.","./leaf.config.json").action((async e=>{I("compiling..."),await A(e.config),I("compiled successfully.")})),M.command("dev").description("Start a development server.").option("-c, --config <string>","Config file location.","./leaf.config.json").option("-p, --port <number>","Port to start the development server.","8080").action((e=>{G(e.config,parseInt(e.port))})),M.command("start").description("Start a Nodejs file server for `build` folder.").option("-p, --port <number>","Port to start the server","8080").option("-d, --dir <string>","Directory to serve.","./dist").action((e=>{v.default.existsSync(e.dir)||(J(`Unable to locate directory ${e.dir}.`),process.exit(1));k(e.dir).start(parseInt(e.port),(async()=>{I(`Started server on http://localhost:${e.port}`),await O.default(`http://localhost:${e.port}`)}))})),M.parse(),exports.DEV_SERVER_ROOT="./.leaf",exports.buildFromConfig=A,exports.bundleFiles=V,exports.compileCode=P,exports.compileFile=U,exports.compileFilesWithGlob=(e,t)=>{_.default(e,((e,r)=>{e?J(`failed to match glob files.\n${q.default.gray(e)}`):r.forEach((e=>{const r=h.default.join(t,e),l=h.default.dirname(r);v.default.mkdir(l,{recursive:!0},(t=>{t?console.error(t):U(e,r)}))}))}))},exports.error=J,exports.getConfigWithDefault=W,exports.info=I,exports.startDevServer=G,exports.transformFilename=B;
//# sourceMappingURL=parser.min.js.map
